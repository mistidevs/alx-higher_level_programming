Test suite for matrix multiplication with NumPy


>>> matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

	>>> matrixA = [[1, 2, 3], [3, 4, 5], [5, 6, 7]]
	>>> matrixB = [[1, 2, 3], [4, 5, 6]]

	>>> print(matrix_mul(matrixB, matrixA))
	[[22 28 34]
	 [49 64 79]]
	>>> print(matrix_mul("Holberton", matrixA))
	Traceback (most recent call last):
	ValueError: Scalar operands are not allowed, use '*' instead
	>>> print(matrix_mul(matrixB, "ALX"))
	Traceback (most recent call last):
	ValueError: Scalar operands are not allowed, use '*' instead

	>>> noneL = None
	>>> empty_list = []
	>>> empty_lists = [[]]
	>>> not_list = [42, [2, 5], [1, 2, 3]]
	>>> not_all_num = [["blue", 1, 2], [3, 4, "f"], ["23b", 5, 6]]
	>>> diff_len = [[1,3,3,3], [3,5,1,2,5], [2,5,8]]
	>>> not_all_lists = [[1, 2, 3], "Holberton", [4, 5, 6]]

	>>> matrix_mul(not_all_lists, matrixA)
	Traceback (most recent call last):
	ValueError: Scalar operands are not allowed, use '*' instead

	>>> matrix_mul(matrixB, not_all_lists)
	Traceback (most recent call last):
	ValueError: Scalar operands are not allowed, use '*' instead

	>>> matrix_mul(empty_lists, [[5, 6], [7, 8]])
	Traceback (most recent call last):
	ValueError: shapes (1,0) and (2,2) not aligned: 0 (dim 1) != 2 (dim 0)

	>>> matrix_mul([[5, 6], [7, 8]], empty_lists)
        Traceback (most recent call last):
        ValueError: shapes (2,2) and (1,0) not aligned: 2 (dim 1) != 1 (dim 0)

	>>> matrix_mul(not_all_num, matrixA)
	Traceback (most recent call last):
	ValueError: invalid data type for einsum

	>>> matrix_mul(matrixB, not_all_num)
	Traceback (most recent call last):
	ValueError: invalid data type for einsum

	>>> matrix_mul(diff_len, matrixA)
	Traceback (most recent call last):
	ValueError: Scalar operands are not allowed, use '*' instead

	>>> matrix_mul(matrixB, diff_len)
	Traceback (most recent call last):
	ValueError: Scalar operands are not allowed, use '*' instead

	>>> matrix_mul(matrixA)
	Traceback (most recent call last):
	TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

	>>> matrix_mul()
	Traceback (most recent call last):
	TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
